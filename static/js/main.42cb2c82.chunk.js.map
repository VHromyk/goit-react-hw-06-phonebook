{"version":3,"sources":["components/ContactsList/ContactList.module.scss","redux/App/app-actions.js","redux/App/app-reducer.js","redux/ContactForm/contactForm-actions.js","redux/ContactForm/contactForm-reducer.js","redux/reducer.js","redux/store.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","App.js","index.js","components/ContactForm/ContactForm.module.scss","components/Filter/Filter.module.scss"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","appActions","state","action","filter","item","_","combineReducers","changeInputName","changeInputNumber","submitFormActions","submitActions","rootReducer","contacts","contactsReducer","middleWare","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","middleware","filterContacts","allContacts","normalized","toLowerCase","contact","includes","connect","list","dispatch","className","styles","map","type","onClick","button","ContactForm","onChangeInput","event","setState","currentTarget","value","onSubmitForm","props","onSubmit","console","log","preventDefault","find","alert","length","onResetForm","form","this","label","input","onChange","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42cb2c82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactList_label__Zh5Sn\",\"input\":\"ContactList_input__kByVZ\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('app/addContact', (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('app/deleteContact');\r\n\r\nconst changeFilter = createAction('app/changeFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport appActions from './app-actions';\r\n\r\nconst itemsInitionalState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\n// const addContact = createAction(types.ADD_CONTACT);\r\n// const deleteContact = createAction(types.DELETE_CONTACT);\r\n\r\n// const items = (state = itemsInitionalState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD_CONTACT:\r\n//       return [payload, ...state];\r\n\r\n//     case types.DELETE_CONTACT:\r\n//       return state.filter(item => item.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\nconst items = createReducer(itemsInitionalState, {\r\n  [appActions.addContact]: (state, action) => [action.payload, ...state],\r\n  [appActions.deleteContact]: (state, action) =>\r\n    state.filter(item => item.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [appActions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeInputName = createAction('contactForm/changeInputName');\r\n\r\nconst changeInputNumber = createAction('contactForm/changeInputNumber');\r\n\r\nconst submitFormActions = createAction('contactForm/submit');\r\n\r\nexport default { submitFormActions, changeInputName, changeInputNumber };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport submitActions from './contactForm-actions';\r\n\r\nconst name = createReducer('', {\r\n  [submitActions.changeInputName]: (_, action) => action.payload,\r\n});\r\n\r\nconst number = createReducer('', {\r\n  [submitActions.changeInputNumber]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  name,\r\n  number,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport contactsReducer from './App/app-reducer';\r\nimport contactFormReducer from './ContactForm/contactForm-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './reducer';\r\n\r\nconst middleWare = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: middleWare,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport appActions from '../../redux/App/app-actions';\r\nimport styles from './Filter.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ list, deleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {list.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          <span>{name}</span>\r\n          <span>{number}</span>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => deleteContact(id)}\r\n            className={styles.button}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  list: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nconst filterContacts = (filter, allContacts) => {\r\n  const normalized = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalized),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter, items } }) => ({\r\n  list: filterContacts(filter, items),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(appActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport appActions from '../../redux/App/app-actions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onChangeInput = event => {\r\n    this.setState({\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  onSubmitForm = event => {\r\n    const { name, number } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n    console.log(contacts);\r\n\r\n    event.preventDefault();\r\n\r\n    const findContact = contacts.find(contact => contact.name === name);\r\n    if (findContact) {\r\n      alert(`${name} is already in the contact`);\r\n    } else if (number.length !== 0) {\r\n      onSubmit(name, number);\r\n      this.onResetForm();\r\n    }\r\n  };\r\n\r\n  onResetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.onSubmitForm}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.onChangeInput}\r\n          ></input>\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.onChangeInput}\r\n          ></input>\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(appActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport appActions from '../../redux/App/app-actions';\r\nimport styles from './ContactList.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ value, changeFilter }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name:\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={changeFilter}\r\n      className={styles.input}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nContactList.propTypes = {\r\n  value: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: event =>\r\n    dispatch(appActions.changeFilter(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './redux/App/app-actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './styles.css';\r\nimport Filter from './components/Filter';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactsList';\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     contacts: [\r\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     ],\r\n//     filter: '',\r\n//   };\r\n\r\n//   addContact = (name, number) => {\r\n//     const contact = {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number,\r\n//     };\r\n//     this.setState({\r\n//       contacts: [contact, ...this.state.contacts],\r\n//     });\r\n//   };\r\n\r\n//   changeFilter = event => {\r\n//     this.setState({\r\n//       filter: event.currentTarget.value,\r\n//     });\r\n//   };\r\n\r\n//   normalizedList = () => {\r\n//     const { filter, contacts } = this.state;\r\n//     const normalized = filter.toLowerCase();\r\n//     const filterContacts = contacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(normalized),\r\n//     );\r\n\r\n//     return filterContacts;\r\n//   };\r\n\r\n//   deleteContact = id => {\r\n//     this.setState(prevState => ({\r\n//       contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n//       filter: '',\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"phoneBook\">\r\n//         <h1 className=\"main-title\">Phonebook</h1>\r\n//         <ContactForm\r\n//         contacts={this.state.contacts}\r\n//         addContact={this.addContact}\r\n//         />\r\n\r\n//         <h2 className=\"second-title\">Contacts</h2>\r\n//         <ContactList\r\n//         value={this.state.filter}\r\n//         changeFilter={this.changeFilter}\r\n//         />\r\n//         <Filter />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst App = () => (\r\n  <div className=\"phoneBook\">\r\n    <h1 className=\"main-title\">Phonebook</h1>\r\n    <ContactForm\r\n    // contacts={this.state.contacts}\r\n    // addContact={this.addContact}\r\n    />\r\n\r\n    <h2 className=\"second-title\">Contacts</h2>\r\n    <ContactList />\r\n    <Filter />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3FtZT\",\"label\":\"ContactForm_label__3a1yC\",\"input\":\"ContactForm_input__1p3nn\",\"button\":\"ContactForm_button__2x_WW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Filter_list__37aar\",\"item\":\"Filter_item__2lEvT\",\"button\":\"Filter_button__1za6F\"};"],"sourceRoot":""}